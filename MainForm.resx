<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>